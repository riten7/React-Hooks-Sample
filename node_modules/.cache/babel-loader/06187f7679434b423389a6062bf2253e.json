{"ast":null,"code":"var _jsxFileName = \"/Users/javraadm/Desktop/react-project/react-todo-app/src/containers/OnlineReminders.js\";\nimport React, { useState, useEffect } from 'react';\nexport default (() => {\n  const [onlineList, setOnlineList] = useState([]);\n  const [error, setError] = useState(false);\n\n  async function fetchData() {\n    await fetch(\"https://jsonplaceholder.typicode.com/todos\").then(res => res.json()).then(response => {\n      console.log('hjasgdjhagsdhj', response);\n      setOnlineList(response);\n    }).catch(setError(error));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"reminder-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, console.log('test', onlineList), React.createElement(\"ul\", {\n    className: \"reminder-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, onlineList.map(listItem => React.createElement(\"li\", {\n    key: listItem.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"listItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, listItem.title), React.createElement(\"div\", {\n    className: \"actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, listItem.completed, \" ? COMPLETED : INPROGRESS\"))))));\n});","map":{"version":3,"sources":["/Users/javraadm/Desktop/react-project/react-todo-app/src/containers/OnlineReminders.js"],"names":["React","useState","useEffect","onlineList","setOnlineList","error","setError","fetchData","fetch","then","res","json","response","console","log","catch","map","listItem","id","title","completed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAGA,gBAAe,MAAM;AAEpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;;AAEA,iBAAeM,SAAf,GAA2B;AAC1B,UAAMC,KAAK,CAAC,4CAAD,CAAL,CACLC,IADK,CACAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADP,EAELF,IAFK,CAEAG,QAAQ,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAA9B;AACAR,MAAAA,aAAa,CAACQ,QAAD,CAAb;AACA,KALK,EAMLG,KANK,CAMCT,QAAQ,CAACD,KAAD,CANT,CAAN;AASA;;AAEDH,EAAAA,SAAS,CAAC,MAAM;AACfK,IAAAA,SAAS;AACT,GAFQ,EAEN,EAFM,CAAT;AAKA,SACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBX,UAApB,CADH,EAEC;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,UAAU,CAACa,GAAX,CAAeC,QAAQ,IACrB;AAAI,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,QAAQ,CAACE,KAAlC,CADD,EAEC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDF,QAAQ,CAACG,SAA3D,8BADD,CAFD,CADF,CADF,CAFD,CADD;AAgBA,CAtCD","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nexport default () => {\n\n\tconst [onlineList, setOnlineList] = useState([]);\n\tconst [error, setError] = useState(false);\n\n\tasync function fetchData() {\n\t\tawait fetch(\"https://jsonplaceholder.typicode.com/todos\")\n\t\t.then(res => res.json())\n\t\t.then(response => {\n\t\t\tconsole.log('hjasgdjhagsdhj', response);\n\t\t\tsetOnlineList(response);\n\t\t})\n\t\t.catch(setError(error));\n\n\t\t\n\t}\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, []);\n\n\n\treturn (\n\t\t<div className=\"reminder-container\">\n\t\t\t{ console.log('test', onlineList)}\n\t\t\t<ul className=\"reminder-list\">\n\t\t\t\t{onlineList.map(listItem => (\n\t\t\t\t\t\t\t<li key={listItem.id}>\n\t\t\t\t\t\t\t\t<p className=\"listItem\">{listItem.title}</p>\n\t\t\t\t\t\t\t\t<div className=\"actions\">\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-status\">{listItem.completed} ? COMPLETED : INPROGRESS</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};"]},"metadata":{},"sourceType":"module"}