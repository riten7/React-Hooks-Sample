{"ast":null,"code":"var _jsxFileName = \"/Users/javraadm/Desktop/react-project/react-todo-app/src/containers/AddReminder.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addReminder } from '../actions/actionCreators';\nimport { bindActionCreators } from 'redux';\n\nfunction AddReminder(props) {\n  const [remindertext, setReminderText] = useState('');\n  return React.createElement(\"div\", {\n    className: \"form-panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-panel__input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: e => setReminderText(e.target.value),\n    value: remindertext,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"reminder\",\n    placeholder: \"Add Reminder Here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setReminderText(''),\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      props.addReminder(remindertext);\n      setReminderText('');\n    },\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Add Reminder\")));\n}\n\nconst mapStateToProps = state => {\n  console.log('2', state);\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    addReminder\n  }, dispatch);\n};\n\nexport default connect(null, mapDispatchToProps)(AddReminder);","map":{"version":3,"sources":["/Users/javraadm/Desktop/react-project/react-todo-app/src/containers/AddReminder.js"],"names":["React","useState","connect","addReminder","bindActionCreators","AddReminder","props","remindertext","setReminderText","e","target","value","mapStateToProps","state","console","log","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AAEA,SACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,QAAQ,EAAEQ,CAAC,IAAID,eAAe,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAArC;AAAuD,IAAA,KAAK,EAAEJ,YAA9D;AAA4E,IAAA,IAAI,EAAC,MAAjF;AAAwF,IAAA,SAAS,EAAC,cAAlG;AAAiH,IAAA,EAAE,EAAC,UAApH;AAA+H,IAAA,WAAW,EAAC,mBAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,EAAD,CAApD;AAA0D,IAAA,SAAS,EAAC,gBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,EAGC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAM;AAAEF,MAAAA,KAAK,CAACH,WAAN,CAAkBI,YAAlB;AAAiCC,MAAAA,eAAe,CAAC,EAAD,CAAf;AAAsB,KAA9F;AAAgG,IAAA,SAAS,EAAC,iBAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHD,CADD,CADD;AAUA;;AAED,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,KAAjB;AACA,SAAOA,KAAP;AACA,CAHD;;AAKA,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAOb,kBAAkB,CAAC;AACzBD,IAAAA;AADyB,GAAD,EAEtBc,QAFsB,CAAzB;AAGA,CAJD;;AAMA,eAAef,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCX,WAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addReminder } from '../actions/actionCreators';\nimport { bindActionCreators } from 'redux';\n\n\nfunction AddReminder(props) {\n\tconst [remindertext, setReminderText] = useState('');\n\n\treturn (\n\t\t<div className=\"form-panel\">\n\t\t\t<div className=\"form-panel__input\">\n\t\t\t\t<input onChange={e => setReminderText(e.target.value)} value={remindertext} type=\"text\" className=\"form-control\" id=\"reminder\" placeholder=\"Add Reminder Here\" />\n\t\t\t\t<button type=\"button\" onClick={() => setReminderText('')} className=\"btn btn-danger\">Cancel</button>\n\t\t\t\t<button type=\"button\" onClick={() => { props.addReminder(remindertext); setReminderText(''); }} className=\"btn btn-success\">Add Reminder</button>\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = state => {\n\tconsole.log('2', state);\n\treturn state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\taddReminder\n\t}, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(AddReminder);\n"]},"metadata":{},"sourceType":"module"}