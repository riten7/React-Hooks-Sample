{"ast":null,"code":"import { ADD_REMINDER, REMOVE_REMINDER } from '../actions/actionTypes';\nconst INITIAL_REMINDER = [];\n\nconst AddReminderReducer = (state = INITIAL_REMINDER, action) => {\n  // console.log('actions detail', action);\n  switch (action.type) {\n    case ADD_REMINDER:\n      return [...state, {\n        id: action.payload.id,\n        reminderText: action.payload.reminderText,\n        completed: false\n      }];\n\n    case REMOVE_REMINDER:\n      const index = parseInt(action.payload.id);\n      return state.filter(reminder => reminder.id !== index);\n\n    case TOGGLE_REMINDER:\n      return state.map(reminder => reminder.id === action.payload.id ? { ...reminder,\n        completed: !reminder.completed\n      } : reminder);\n\n    default:\n      return state;\n  }\n};\n\nexport default AddReminderReducer;","map":{"version":3,"sources":["/Users/javraadm/Desktop/react-project/react-todo-app/src/reducers/AddReminderReducer.js"],"names":["ADD_REMINDER","REMOVE_REMINDER","INITIAL_REMINDER","AddReminderReducer","state","action","type","id","payload","reminderText","completed","index","parseInt","filter","reminder","TOGGLE_REMINDER","map"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,eAAvB,QAA8C,wBAA9C;AAEA,MAAMC,gBAAgB,GAAG,EAAzB;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGF,gBAAT,EAA2BG,MAA3B,KAAsC;AAChE;AACA,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,YAAL;AACC,aAAO,CAAC,GAAGI,KAAJ,EAAW;AACjBG,QAAAA,EAAE,EAAEF,MAAM,CAACG,OAAP,CAAeD,EADF;AAEjBE,QAAAA,YAAY,EAAEJ,MAAM,CAACG,OAAP,CAAeC,YAFZ;AAGjBC,QAAAA,SAAS,EAAE;AAHM,OAAX,CAAP;;AAMD,SAAKT,eAAL;AACC,YAAMU,KAAK,GAAGC,QAAQ,CAACP,MAAM,CAACG,OAAP,CAAeD,EAAhB,CAAtB;AACA,aAAOH,KAAK,CAACS,MAAN,CAAaC,QAAQ,IAAIA,QAAQ,CAACP,EAAT,KAAgBI,KAAzC,CAAP;;AAED,SAAKI,eAAL;AACC,aAAOX,KAAK,CAACY,GAAN,CAAUF,QAAQ,IAAKA,QAAQ,CAACP,EAAT,KAAgBF,MAAM,CAACG,OAAP,CAAeD,EAAhC,GAC7B,EAAC,GAAGO,QAAJ;AAAcJ,QAAAA,SAAS,EAAE,CAACI,QAAQ,CAACJ;AAAnC,OAD6B,GACkBI,QADxC,CAAP;;AAGD;AACC,aAAOV,KAAP;AAjBF;AAmBA,CArBD;;AAuBA,eAAeD,kBAAf","sourcesContent":["import { ADD_REMINDER, REMOVE_REMINDER } from '../actions/actionTypes';\n\nconst INITIAL_REMINDER = [];\n\nconst AddReminderReducer = (state = INITIAL_REMINDER, action) => {\n\t// console.log('actions detail', action);\n\tswitch (action.type) {\n\t\tcase ADD_REMINDER:\n\t\t\treturn [...state, {\n\t\t\t\tid: action.payload.id,\n\t\t\t\treminderText: action.payload.reminderText,\n\t\t\t\tcompleted: false,\n\t\t\t}];\n\n\t\tcase REMOVE_REMINDER:\n\t\t\tconst index = parseInt(action.payload.id);\n\t\t\treturn state.filter(reminder => reminder.id !== index);\n\n\t\tcase TOGGLE_REMINDER:\n\t\t\treturn state.map(reminder => (reminder.id === action.payload.id) ? \n\t\t\t{...reminder, completed: !reminder.completed}: reminder)\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default AddReminderReducer;"]},"metadata":{},"sourceType":"module"}