{"ast":null,"code":"import { ADD_REMINDER, REMOVE_REMINDER, TOGGLE_REMINDER } from '../actions/actionTypes';\nconst INITIAL_REMINDER = [];\n\nconst AddReminderReducer = (state = INITIAL_REMINDER, action) => {\n  console.log('actions detail', action);\n\n  switch (action.type) {\n    case ADD_REMINDER:\n      return [...state, {\n        id: action.id,\n        reminder_text: action.text,\n        completed: false\n      }];\n\n    case REMOVE_REMINDER:\n      const index = parseInt(action.id);\n      return state.filter(todo => todo.id !== index);\n\n    case TOGGLE_REMINDER:\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n\n    default:\n      return state;\n  }\n};\n\nexport default AddReminderReducer;","map":{"version":3,"sources":["/Users/javraadm/Desktop/react-project/react-todo-app/src/reducers/AddReminderReducer.js"],"names":["ADD_REMINDER","REMOVE_REMINDER","TOGGLE_REMINDER","INITIAL_REMINDER","AddReminderReducer","state","action","console","log","type","id","reminder_text","text","completed","index","parseInt","filter","todo","map"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,eAAvB,EAAwCC,eAAxC,QAA+D,wBAA/D;AAEA,MAAMC,gBAAgB,GAAG,EAAzB;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGF,gBAAT,EAA2BG,MAA3B,KAAsC;AAChEC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,MAA9B;;AACA,UAAQA,MAAM,CAACG,IAAf;AACC,SAAKT,YAAL;AACC,aAAO,CAAC,GAAGK,KAAJ,EAAW;AACjBK,QAAAA,EAAE,EAAEJ,MAAM,CAACI,EADM;AAEjBC,QAAAA,aAAa,EAAEL,MAAM,CAACM,IAFL;AAGjBC,QAAAA,SAAS,EAAE;AAHM,OAAX,CAAP;;AAMD,SAAKZ,eAAL;AACC,YAAMa,KAAK,GAAGC,QAAQ,CAACT,MAAM,CAACI,EAAR,CAAtB;AACA,aAAOL,KAAK,CAACW,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYI,KAAjC,CAAP;;AAED,SAAKZ,eAAL;AACC,aAAOG,KAAK,CAACa,GAAN,CAAUD,IAAI,IAAKA,IAAI,CAACP,EAAL,KAAYJ,MAAM,CAACI,EAApB,GACzB,EAAC,GAAGO,IAAJ;AAAUJ,QAAAA,SAAS,EAAE,CAACI,IAAI,CAACJ;AAA3B,OADyB,GACcI,IADhC,CAAP;;AAGD;AACC,aAAOZ,KAAP;AAjBF;AAmBA,CArBD;;AAuBA,eAAeD,kBAAf","sourcesContent":["import { ADD_REMINDER, REMOVE_REMINDER, TOGGLE_REMINDER } from '../actions/actionTypes';\n\nconst INITIAL_REMINDER = [];\n\nconst AddReminderReducer = (state = INITIAL_REMINDER, action) => {\n\tconsole.log('actions detail', action); \n\tswitch (action.type) {\n\t\tcase ADD_REMINDER:\n\t\t\treturn [...state, {\n\t\t\t\tid: action.id,\n\t\t\t\treminder_text: action.text,\n\t\t\t\tcompleted: false,\n\t\t\t}];\n\n\t\tcase REMOVE_REMINDER:\n\t\t\tconst index = parseInt(action.id);\n\t\t\treturn state.filter(todo => todo.id !== index);\n\n\t\tcase TOGGLE_REMINDER:\n\t\t\treturn state.map(todo => (todo.id === action.id) ? \n\t\t\t{...todo, completed: !todo.completed}: todo)\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default AddReminderReducer;"]},"metadata":{},"sourceType":"module"}