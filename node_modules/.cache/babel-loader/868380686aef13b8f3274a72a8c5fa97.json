{"ast":null,"code":"var _jsxFileName = \"/Users/javraadm/Desktop/react-project/react-todo-app/src/containers/ListReminders.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nfunction ListReminders(props) {\n  return props.reminderList.length !== 0 ? React.createElement(\"div\", {\n    className: \"reminder-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"reminder-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.reminderList.map(reminder => {\n    return React.createElement(\"li\", {\n      key: reminder.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, reminder.reminderText);\n  }))) : null;\n}\n\nconst mapStateToProps = state => ({\n  reminderList: state.AddReminderReducer //need to change the name later\n\n}); // const mapStateToProps = state => ({\n//     todos: state.todos\n// })\n// const mapStateToProps = state => { \n//     return { todos: state.todos }; \n// };\n// const mapDispatchToProps = dispatch => {\n// \treturn bindActionCreators({\n// \t\tdeleteReminder,\n// \t\ttoggleReminder\n// \t}, dispatch)\n// }\n\n\nexport default connect(mapStateToProps, null)(ListReminders);","map":{"version":3,"sources":["/Users/javraadm/Desktop/react-project/react-todo-app/src/containers/ListReminders.js"],"names":["React","connect","ListReminders","props","reminderList","length","map","reminder","id","reminderText","mapStateToProps","state","AddReminderReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,SACCA,KAAK,CAACC,YAAN,CAAmBC,MAAnB,KAA8B,CAA9B,GACA;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,KAAK,CAACC,YAAN,CAAmBE,GAAnB,CAAuBC,QAAQ,IAAI;AACnC,WAAO;AAAI,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBD,QAAQ,CAACE,YAAhC,CAAP;AACA,GAFA,CADF,CADD,CADA,GAOS,IARV;AAUA;;AAED,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCP,EAAAA,YAAY,EAAEO,KAAK,CAACC,kBADa,CACM;;AADN,CAAL,CAA7B,C,CAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeX,OAAO,CAACS,eAAD,EAAkB,IAAlB,CAAP,CAA+BR,aAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction ListReminders(props) {\n\treturn (\n\t\tprops.reminderList.length !== 0 ?\n\t\t<div className=\"reminder-container\">\n\t\t\t<ul className=\"reminder-list\">\n\t\t\t\t{props.reminderList.map(reminder => {\n\t\t\t\t\treturn <li key={reminder.id}>{reminder.reminderText}</li>\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div> : null\n\t)\n}\n\nconst mapStateToProps = state => ({\n\treminderList: state.AddReminderReducer //need to change the name later\n})\n\n// const mapStateToProps = state => ({\n//     todos: state.todos\n// })\n\n// const mapStateToProps = state => { \n//     return { todos: state.todos }; \n// };\n\n// const mapDispatchToProps = dispatch => {\n// \treturn bindActionCreators({\n// \t\tdeleteReminder,\n// \t\ttoggleReminder\n// \t}, dispatch)\n// }\n\nexport default connect(mapStateToProps, null)(ListReminders);"]},"metadata":{},"sourceType":"module"}